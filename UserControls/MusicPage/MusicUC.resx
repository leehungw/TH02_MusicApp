<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pn_categories.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wgARCADIAZADASIAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABIEAACAQMCAgQHDQUGBwEAAAABAgMABBEFIRIxE0FR
        YQYQInGBkaEUICMyQEJSYnKiscHRFTBDkuEzgIKy0vAHJCU0RFBjo//EABgBAQEBAQEAAAAAAAAAAAAA
        AAABAgME/8QAJhEAAgIBAgYDAAMAAAAAAAAAAQIAEfAhMQMQEjBBYVFggSCxwv/aAAwDAQACEAMQAAAA
        +HDvkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAASQSIyxAAJyi410wGULDLFAAExkMc8AAAAAAAAAABOVyay2tc8WMszNtmFW/p2YCUmC7bx3ry49
        XQ0Zuccom0RdZSyxBkY2YbBXV0NNKwoAAAAAACYEoyXf2dzSvjcrtzN+fX4u8dSjuuWlyfX+bZ5UznPT
        hbr9Nm/p6HqHk8tye/qa3xEzPTj08Oo48bU7Wg1qWWJ0jpPROWhy/b+fcPJujzHrnEtAAAAAAAd7g34v
        qeZqU8Ova3POE69PCy6Z9H7DwH0Dx9ur4b3Hz7GuJZsc338d3q+V7WL0PWeB9B5910crW6Zunjx6OXqL
        /Jdblvpc6a5vpaGrp9uHr/UeG6Xl7/RvB28Dndvy+9p+7hrrK+uQAAAAAALMcVShLMCX1xZWz2vN7nLp
        6HiZc/n0t14r78LVKze3+Tdz600ZY7xfSt1ivZqrmrscMcbtxrv3yzt0bV6PNzolnEsAAAAAAAAAAAAX
        0Zrs1Y151A1gDPOqViBAAAAGeEmdeWIAAAAAAAAAAAAAmBljMAAEziAAAAAEwJgAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/8QASBAAAgEDAgIE
        Bw0FBgcBAAAAAQIDAAQRBSESMRNBUWEGECJxgZGhFCAjMkBCUmJyorHB0RUwQ5LhM4CCstLwByQlNERQ
        Y6P/2gAIAQEAAT8A/uJ4/wDVAZoj3w50Rzz1fvB8s2GQwycbYPI+Ie/UZxTpjpvqt+ZphwtjxIodwCwU
        dpBP4VsOe57jRVeAMrZzzXG6+/HKsfJ+E8IPUTjxkoRkJwjq8rJP+/zriBGCNurFEYOKUUUPm2zR5+9j
        TKq3a+KmjwL84+LKB941crwzY+qp+6PFkCNcKA24zk79/wCVKQGBIyOztoEDh2+1vzplK+bt98gyKI2o
        8/ksMfSzKn0jiljzaW7fTnK+xf1qdCk8q42VyD6zQGTinJzgrw46iMHxMeJQxYlvnZqGPiWUkbqoPtFd
        F5Sd8Bb7pp1xHG30s/j4wrMGIBIXmezq8VtHxW0R7Z8ewVeRcMerHsnX/M1XcObqUfRtkb7i1GQJFLIH
        AO6kkcXdkUQCCQy4XAAJ3PmplChSHVuIZOM7dx7/ABRJ0jr9lvYDRTESP9IkerH6+MLxISMlgeXdWKgQ
        sTU1sY45if4ZA9uKkjKMB9UN6xn5EDg8gfPQ4ccyD5qII35jtrR7dpNVtFI2fLDzAH9KjCx6dYBIQc3r
        L8IMk7J6v6VeWyyJqjogV4rgEgHPEMvy76ljMLFG+McerGaJJOScnvoDNBPIJyN8jHXyzUFvm4v48fFj
        H+Zae34GjyP/ABCfuNUyYsrVu3pPxFYpI2kYqgyQCx7gNyaJRXIUB1GQCRgnvq1ijuJ1jIYMxAAHI7/p
        VlE66fZs6leO7yMjGQVXetXt+istXYjnOv8AmNXUeb+8HZpyn7iV7nZUEnEozGZBxEDO5G3aduXvLK2U
        TwjJ4pIHkwRtjgbr9FSRH9lWcmNmklX0+T4+ShQee5oRmRgF8ps426602344VbHObg+7mtXtOittQOMe
        WpH89TWubp1xysVf/wDMURimiKEiQ8JHzeuvJ22J7c/IVyc4BOBkjurTY+C60NVVgZYnYsescT4/35qt
        x/0rS2OfK1Btz17JV2pS31yVWwyagno3fetRs2N/qTqhEa2iSDbYbJgZ9dPaTL0PkkmaPpEA+jk/6TUc
        TyvGqg5kYKp6idv1FJbkabO5XykuFQ/yv+lQWxGsaouDjhUb/aSr6zaOeBAu/uOT2RtVxbt+zdOGPjGU
        D+YURim41tVBQcDuSrcIySNjvz7NvFpEDDVNPyoInkyMjfYkbeqrJSNLs8A493kAn7C14WWLwaTdYQky
        Mj+tjVzGV1LUVIIxpanH+BKe3kmj0q0RmX3RbEuB87DuR+FKjsitwnDHAOOZ229ooxuI3k4DwoQrHsJz
        t7DSaeyNfxyjy7eASesp+TVaxA6npKsQofTmyxGwHDJvUNt0mn6QGYBTcyLnG58pBgCmhiKyuElwsvBk
        MD29WO7tqezlt5nRlLBNyQNsZxv2b7U0btMQsTDyS4UA7LjOfNitJtydQsCRlZpcAeZsVpmmZs4GiIYe
        6uI9WMLjBrwg01uiul4dmjjfPnbNXERi1CYJkOumZBGx2jG9XMbQWdjPHgExseLI+mw2B58qI2+RaVp4
        iu7+Cd4znS5JQyNkDiVWHpANWjpJq/gsykhWt5M7chxy7eyrQqdD0Ynn+02GO7EX61eMBZ+EzZRSmooV
        4lyGPFLtj9dq1BlF7rqucY0yMx9jAiEHHp/OoLi2iv8ARHlZRGmmurnsYiUD8q0yS3ePwegyOlTUGMo7
        FLR4/A00QGi6vIMeTqiqPNiSoNMFzrOrLEPhOFMd+6Gta0dIdU6R0wi2si8/qHNSwwypoCFeHpLh1AU8
        vhVFTWRj095yBxC5EQI5EFC1Xuk+5p9ViM6A6eypwtzky/Dt681a6XbvdTRG4SZV017oMnJX6Pi4fODt
        WkwIdQ8EM/xelz6JXqzLJoFiSY+lOqFWCqBw/Bpy7+2v+ICxnSL3rEawLt9t6k4m1DWCwJto9FjLAY2J
        jjxj01apFFqngyGkDf8AJyZI5c5t/wAKtprdNJ0YPsUv3kfI+Z8Fv7D6qu7m2fTtbVGBaW/V4u9My/qP
        XV3PDJqPhC8ZXgawQJjrPwP9a0+NZ9Z0SM4AOjvk52zwTVbRJLaeCpQDha+kXPIkCSIZ9POrmIDQ9Slw
        ARqYTAOwHDJWr3UVtqnhHa8HF0hToz9HDIT+ApNZU3qztbhQtibQIpz/AAyobfvOa0eFOm8Eyf4k8oOe
        6UV4JdGtiGlxw+6yDn7NeFqwPpsyQgF0ijDY23zir5GTUbwspC/sUnONs9EvXVtbQz3vgtbylHR45A+D
        kH4R69zSCxS6JXo2cxjyhniABO3PGCN/kUbtBA7KcNMpj/wdfrxj11b6i4u9OkJ3tkKLty3Y/nUVyUsr
        OLqiuTIPPhP0q4vGki1JM7XFyJD6C/8AqqS+Mt28rSZEyCGQEfN4VH5D1U6lJGQni4ds4qGRopklQ4ZG
        DKe8HIq3uGbSriIn+0uUkPn4W/WtN1UQX89y5BdwoA5eTtivCHW0uZ2XOC0bkHzqQakuTHLo/wD8J2Ye
        lwalm6bQeFQmYrnpGVVIwApGSTzyTn01qd4dQ1K5u2G80hflio5XhLGNipZShx1gjBFadfGGfRpWP/al
        1jHeXYk+YZ9daddOthbQg7e7C5yM81X9K8JtS91abeqdy0q532wGJq4vma9vHz/aaesP3EH5V7seaKyh
        U4kgiKxMOe7MSPTn10cZPCCF6gTyHiV2UMAxAYYbvHP8hWmXjR3MMxzxR2z26fyNk+pvbVlftHb6JFnC
        2900gx28SnNT3CyaLdQYUM990hbi+N5LY27sn11JeG6u5yuQs64biAJJC7ZIHaP1oHetMvGEuk74W0dn
        J6lBcHNafrB6GOCIlUFxxHfc+T11rmtO63LBv7ThHqbNXGqs1xLKjlWezEWx+oBTagHS2LFkktlIjaMY
        IyxJ7uumgjzhbiHC7ZORnvoQu0hSMdIQC3kb7AZJ9Q/fjGRkZFIsQHE75+oo39J6qkkMj8Rx2ADkB2Cg
        cHIriwAOw5okkk9pz4nxJEsuN18mQ9fcfyoA4DdROKt2CRsXDBVbLe3AHfVpfs9/cliOQbbzitRvuPon
        BORCQc9uDQuTJ7iyeTn8RSzmG3bhJwZhlc7MMbg06wuco/R/VfJx5iK4Yozl36T6qZAPnNLMzXEbnA4T
        tjkB2CrJ+FYuwS59gq9n6S3ulz88H2mpX+Fc9sYHsHidTMnTAeV88dv1h+f9aII5ikRpHCqNzSuolQo+
        QisoGD2Hf0kmonwLX6shPtFM3wEg7ZQfYatiEnjcsMq67EZzvvQRuk6MDLZ4cAczTTGEdFE+3zyp2Y/m
        B/WrKbgkznlvV7c9LARnrzRkJPoxRPyiORo2yp7iDuCOw10kJ36HB7A5x+vtqSVpMA4AHJRyH++2rWbg
        mmftX8xUspfClwMRnc+Y0jkdB3MfxqXiXCsCBzGevvriIzgkZGD3+OJsKPtZqSTImGfjN+ZpzlvQPErM
        jBlJDDkRReNiOOLBIzmNsD1b4rpVUcCx8KH43leUw7M0hw3oP4UrY6PubP4UW2I7TnxNcsSxVFV22Zxz
        Pb5s91ZqJsU75XFE7/LI2wH7xRfiAyRkJj2VxlRHuuVJIwPxNHn7xTgUW+N30efvs+9U7UTtR5/LFOBR
        b8Kzy96OXi6/3Y5fLh78UeX7wUT8uz/ca//EACsRAAEDAwIDBwUAAAAAAAAAAAEAAhEDIfAQMRIwYRMg
        YIHB0fFAQVFx4f/aAAgBAgEBPwDxXCHdNvoQQiRpIAKDgQjpxCQE4ztpbdb6OcALpj2kcp7S4QCuzdOd
        fdNpOzyRo23v8+6rNeDvllRL8/RQ4y7p8f1VWPixyCnNeKgj8+oTKbiAJyF2V5nJlPpODTB+3ogHA+fq
        m0hwiVUpVDnUqlSfGdFTY5p3yTzajQQmUwBnVN2RuIRZJlNEaHZcN9DdAACOfHjT/8QAJhEAAgIBAgYD
        AAMAAAAAAAAAAQIAEfAhMQMQEjBBYVFggSCxwv/aAAgBAwEBPwD7SWqA3yOkDXzZ9azeIeocif4WO1cZ
        izZ7nDcjQ5oJcd7NDNohPVnuARmoExrLfv8AoTgtQF+v65cR9CBmkRvBzWAiOxuhAzDPQimxfZBA3gCV
        nqN0Dxms6h8RUQjPcPCTPyEKBrvE6DuIESrzaOvDXxlyx8RegmiJ0LWfENWagCeM2hCRmXau5rOGa3hc
        5+RtTBobgbSMbm0Xe4W5DSE94GX90//Z
</value>
  </data>
  <data name="pb_search.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAApZJREFUaEPt
        2UuoTVEcx/HjEcorumVAeSUDAwairkwoA4oJeUYZGHokSW5RKK8JBsqAEiOU98gAkWTmMSF5DElJnnl+
        f+Wvf7t9j+P4r33OqfWrT7f+ddfr7r322vvWcnJycjo647ERV/AAr/EZL3AbxzAfg9BWmYWb+Nmgd9iF
        oWhpRuAcygbZiFdYhpZkMh7DD+gLzmMtpqALAzAGs7Ebj+B/5wf2oC8qiwb/Bn4QJzEOf0sfLEFx8ro/
        Kskw+FX8hJX41wzGWfhJbEDynIF1+AEz0Gz01zgKa+8rpiNZZkKXizrTz4gbsD+uwSZxHclyA9bRKRWC
        opv8I6zteQiPblDrQLvNBERmH6z9yMX5k02wDi6qEJyxsPbfQttvaHQ8sA7WqZAgD2F9dKsQmfuwxqep
        kCDHYX2EP6H9g2uUCgmiJ7L1sVmFyOiBZY0PUSFBtsH62KlCZJ7DGp+oQoIchvWxXoXI3IE1PleFBLkA
        62OxCpHRYcsa369CcLRt6j3B+tC2GpoFsMafIPr469t/qkJ09BroV2gVoqJD3V1Y2zuQJH6bewYdrSOi
        xbB2dSYajSQZDr2oW2eX8b+X0lS8h7W5F0njV0tOYCCaiZ7oL2FtafVHInkOwE/iFvRJpdHoml8Nv/Lm
        EsIPcsX0g96Bfcc6Yh+C3pd7izaChbgH/7tFOu0mn4SyFd9RHIBe2DVBPS96cAQ6zZatuF5LizWpbBI6
        9uqrW9kg6tEXu4PQt6XTv2tFlU1CWQR9ZShbZU83rb4P+SetLsm2mISi63wO1mA7tC1uwQpMQm+pNwmd
        kSqdRLMp2xzMVTS7XVeaPIl2Sb17Ql8HOyJlf4lvWIqOiZ+EBr8cHRebRMv+GZKTk5PTSGq1XwUPL0D8
        JZYEAAAAAElFTkSuQmCC
</value>
  </data>
</root>